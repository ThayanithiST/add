<form action="" onsubmit="return validateForm()">
  <div id="group1">
    <input type="checkbox" name="check" value="option1">
    <input type="checkbox" name="check" value="option2">
    <input type="checkbox" name="check" value="option3">
  </div>

  <div id="group2">
    <input type="checkbox" name="check" value="option1">
    <input type="checkbox" name="check" value="option2">
    <input type="checkbox" name="check" value="option3">
  </div>

  <div id="group3">
    <input type="checkbox" name="check" value="option1">
    <input type="checkbox" name="check" value="option2">
    <input type="checkbox" name="check" value="option3">
  </div>

  <input type="submit">
</form>

<script>
function validateForm() {
  var groups = document.querySelectorAll('[id^="group"]');
  var isValid = true;
  var alertShown = false;

  groups.forEach(function(group) {
    var checkboxes = group.querySelectorAll('input[type="checkbox"]');
    var checkedCount = 0;

    checkboxes.forEach(function(checkbox) {
      if (checkbox.checked) {
        checkedCount++;
      }
    });

    if (checkedCount === 0) {
      isValid = false;
      if (!alertShown) {
        alertShown = true;
        alert('Please select at least one checkbox in each group.');
      }
    }
  });

  return isValid;
}
</script>




<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="https://kit.fontawesome.com/e61d547b58.js" crossorigin="anonymous"></script>
  
  <style type="text/css">
    body {
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    
    .full-content-container {
      flex: 1;
    }
    
    nav {
      display: flex;
      justify-content: space-between;
      position: fixed;
      top: 0;
      width: 100%;
      background-color: #282A35;
      overflow: hidden;
    }
    
    .heading {
      display: flex;
      align-items: center;
    }
    
    #openSidebar {
      border: none;
      outline: none;
      background: transparent;
      color: white;
    }
    
    nav .heading a {
      margin-top: 7px;
      color: white;
      font-weight: 700;
      font-size: 23px;
    }
    
    nav .heading a:hover {
      color: blue;
    }
    
    #logout {
      margin: 13px 18px;
      color: white;
      font-weight: 500;
      text-decoration: none !important;
    }
    
    .main-contant-container {
      flex: 1;
      margin-top: 50px;
      display: flex;
    }
    
    aside {
      width: 180px;
      position: fixed;
      background-color: #E7E9EB;
      height: 100vh;
      overflow: hidden;
      display: flex;
      flex-direction: column;
    }
    
    aside a {
      font-size: 15px;
      font-weight: 500;
      padding: 13px 25px;
      color: black;
      text-decoration: none !important;
      color: black;
    }
    
    aside a:hover {
      background-color: #ffffffad;
    }
    
    section {
      flex: 1;
      background-color: #ffffff;
      padding: 20px;
      margin-left: 180px;
    }
    
    @media (max-width: 767px) {
      .heading {
        flex-direction: column;
        align-items: flex-start;
      }
      
      #logout {
        margin: 10px 18px;
      }
      
      .main-contant-container {
        flex-direction: column;
        margin-top: 70px;
      }
      
      aside {
        width: 100%;
        position: static;
        height: auto;
        overflow: visible;
      }
      
      section {
        margin-left: 0;
      }
    }
  </style>
</head>

<body>
  <div class="full-content-container">
    <nav>
      <div class="heading">
        <button class="navbar-brand" id="openSidebar"><i class="fa-solid fa-bars"></i></button>
        <a href="#"><label>Forms</label></a>
      </div>
      <a href="../Logout.jsp" id="logout"><span class="glyphicon glyphicon-log-in"></span> Logout</a>
    </nav>

    <div class="main-contant-container">
      <aside>
        <a href="">Create Form</a>
        <a href="">Add Users</a>
        <a href="">Results</a>
      </aside>

      <section>
        <h1>Create Form</h1>
      </section>
    </div>
  </div>

<script>
  $(document).ready(function() {
    var isToggled = false; // Flag variable to track the toggle state
    $("#openSidebar").click(function() {
      var aside = $("aside");
      var section = $("section");
      aside.animate({ width: 'toggle' }, "slow");
      if (isToggled) {
        section.animate({ 'margin-left': '180px' }, "slow");
        isToggled = false; // Update the flag variable
      } else {
        section.animate({ 'margin-left': '5px' }, "slow");
        isToggled = true; // Update the flag variable
      }
    });
  });
</script>

</body>
</html>


import javax.naming.Context;
import javax.naming.directory.DirContext;
import javax.naming.directory.InitialDirContext;

public DirContext getLdapContext(String ldapURL, String username, String password) throws Exception {
    Properties properties = new Properties();
    properties.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
    properties.put(Context.PROVIDER_URL, ldapURL);
    properties.put(Context.SECURITY_PRINCIPAL, username);
    properties.put(Context.SECURITY_CREDENTIALS, password);

    // Establish the LDAP connection
    DirContext ctx = new InitialDirContext(properties);
    return ctx;
}

String ldapURL = "ldap://ldap.example.com:389"; // Replace with your LDAP server URL
String username = request.getParameter("username");
String password = request.getParameter("password");

try {
    // Connect to LDAP
    DirContext ctx = getLdapContext(ldapURL, username, password);
    // Authentication successful
    // Perform any additional checks or actions

    // Close the LDAP connection
    ctx.close();

    // Redirect to a success page or perform other actions
    response.sendRedirect("success.jsp");
} catch (Exception e) {
    // Authentication failed
    // Handle the failure (e.g., display an error message)
    response.sendRedirect("error.jsp");
}

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"

pageEncoding="ISO-8859-1"%>

<%@ page import="project.ConnectionProvider"%>

<%@ page import="java.sql.*"%>

<!DOCTYPE html>

<html>

<head>

<meta charset="ISO-8859-1">

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<script src="https://kit.fontawesome.com/e61d547b58.js" crossorigin="anonymous"></script>

<link rel="stylesheet" href="../css/style.css">

<script src="../js/sidebar.js"></script>

<title>Admin Home</title>

<style type="text/css">
body {
	background-color: #f8f8f8;
}
nav {
	margin: 0 !important;
	background-color: #f28c38;
	border-radius: 0 !important;
	overflow: hidden;
	width: 100% !important;
}

nav .heading a {
	color: white;
	font-weight: 700;
}
nav .heading a:hover{
	color: blue;
}

.heading button {
	border: none;
	outline: none;
	background: transparent;
	color: white;
}
nav ul li a{
	color: white !important;
}
nav ul li a:hover{
	color: black !important;
	background: none !important;
}
.main-content-container {
	display: flex;
	height: 100%;
}

aside {
	margin-top: 0;
	background-color: #797979;
	top: 0;
	left: 0;
	min-width: 180px;
	max-width: 180px;
	min-height: 100vh;
}

#openSidebar {
	display: none;
}

aside ul {
	height: 100%;
	display: flex;
	flex-direction: column;
	font-size: 13px;
}

aside ul li{
	margin: 5px 6px;
	padding: 13px 25px;
	font-weight: 500;
}

aside ul li:hover {
	background-color: #ffffffad;
}

aside ul a{
	
	text-decoration: none !important;
	color: black;
}

section {
	width: 100%;
}

section h3 {
	color: #333333d1;
	margin-left: 8px;
	margin-bottom: 10px;
}

textarea{
	 resize: none;
}

.fieldFormContainer span {
	color: red;
}
.CreateFormOuterContainer{
	width: 80%;
	margin-bottom: 20px;
}
.CreateFormContainer{
	display: flex;
	flex-direction: column;
	padding: 20px 20px;
	background-color:  #fff;
	border-radius: 10px;
	border-top:4px solid #6B6B6B;
	border-right: 1px solid #d9d9d9;
	border-left: 1px solid #d9d9d9;
	border-bottom: 1px solid #d9d9d9;
}
.CreateFormInnerContainer{
	display: flex;
	Justify-content: space-evenly;
	flex-wrap: wrap;	
}
#TotalFields{
	background-color: white;
	margin-bottom: 20px; 
	padding: 10px 40px;
	width: 77%;
	border-radius: 10px;
	display: flex;
	gap: 30px;
	justify-content: space-evently;
	border: 1px solid #d9d9d9;
}
.quantity{
	display: flex;
	
}

.quantity input[type="button"],.quantity input[type="number"]{
	height: 35px;
	border: 1px solid #43A6C6;
	background: none;
}
.quantity input[type="number"]{
	width: 80px;
	text-align: center;
	border-right: none;
	border-left: none;
	font-size: 15px;
}
.quantity input[type="button"]{
	width: 40px;
	font-size: 20px;
}
.FieldsContainer{
	width: 80%;
}
.InnerFieldsContainer{
	display: flex;
	gap: 4px;
}
.field-container{
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	margin-bottom: 30px;
	gap: 30px;
	background-color:  #fff;
	padding: 20px 55px;
	border: 1px solid #d9d9d9;	
	border-radius: 10px;
}

.FieldButtonsContainer{
	background: white;
	display: flex;
	flex-direction: column;
	gap: 15px;
	width: 50px;
	height: 93px;
	padding: 2px 7px;
	border: 1px solid #d9d9d9;	
}
.FieldButtonsContainer button{
	width: 30px;
	height: 30px;
	background: none;
	outline: none;
	border: none;	
	font-size: 20px;
}
#priority{
	border: 0.5px solid #43A6C6;
}
.priorityDiv{
	display: flex; 
	gap: 10px
}
.priorityDiv label{
	margin-top: 5px;
}
.inputs button{
	width: 30px;
	height: 30px;
	background: none;
	outline: none !important;
	border: none;	
	font-size: 18px;
}
#dependentDiv{
	display: flex;
	gap: 10px;
	flex-wrap: wrap;
}
.DependentOptionsContainer{
	margin-left: 30px;
	margin-bottom: 10px;
}
#dependentDiv select{
	margin-left: 10px;
}
.DependentinputFields{
	display: flex;
	flex-direction: column;
}
.fieldText{
	border-top: none !important; 
	border-right: none !important; 
	border-left: none !important; 
	outline: none;
	height: 30px;
}
#dependentFieldContainer{
	display: flex;
	gap: 20px;
	margin-bottom: 10px;
}
.FormsContainer{
	width: 60%;
	line-height: 35px;
}

.FormContainerFields{
	width: 100%;
	background-color: white;
	margin: 15px 0;
	padding: 20px 20px;
	border: 1px solid #d9d9d9;
	border-radius: 10px;
}
#headingFieldContainer{
	border-top:4px solid #6B6B6B;
	border-right: 1px solid #d9d9d9;
	border-left: 1px solid #d9d9d9;
	border-bottom: 4px solid #6B6B6B;
}
.FormContainerFields span{
	color: red;
}
.updateFormContainer{
	width: 80%;
	display: flex;
	Justify-content: space-evenly;
	flex-wrap: wrap;
	padding: 20px 20px;
	margin-bottom: 15px;
	background-color:  #fff;
	border-radius: 10px;
	border-top:4px solid #6B6B6B;
	border-right: 1px solid #d9d9d9;
	border-left: 1px solid #d9d9d9;
	border-bottom: 1px solid #d9d9d9;	
}
.updateFieldContainer{
	width: 80%;
	display: flex;
	flex-wrap: wrap;
	margin-bottom: 15px;
	gap: 20px;
	background-color:  #fff;
	padding: 20px 55px;
	border: 1px solid #d9d9d9;	
	border-radius: 10px;
}
.updateDependentField{
	display: flex;
	gap: 20px;
	margin-left: 20px;
}
.allFormsTableDiv{
	width: 90%;
	padding-top: 20px;
	padding-right: 20px;
	padding-left: 20px;
	background-color:  white;
	border: 1px solid #d9d9d9;
}
.allFormsTable th{
	color: black;
	padding:13px 5px !important;
	font-size: 15px;
	background-color:  #f2f2f2;
}
.allFormsTable tr:last-child{
	border-bottom: 1px solid  #cccccc;
}
.allFormsTable td{
	padding: 13px 5px !important;
	font-size: 15px;
	vertical-align: middle !important;
}
.allFormsTable button{
	background-color: white;
	border: 1px solid #d9d9d9;
	color: #595959;
}
.allFormsTable button:hover{
	border: 1px solid #43A6C6;
	color: #43A6C6;
}
.AddUserOuterContainer{
	background-color:  #6B6B6B;
	width: 330px;
	border-radius: 5px;
	padding: 0px 3px;
}
.AddUserContainer{
	padding: 30px 30px;
	background-color: white;	
	line-height: 40px;
	border-radius: 5px;
}

.AddUserContainer span{
	color: red;
}
</style>

</head>

<body>

<div class="full-content-container">

<!------------------- Nav Bar start ----------------->

<nav class="navbar navbar-expand-sm sticky-top">

<div class="container-fluid">

<div class="navbar-header heading">

<button class="navbar-brand" id="openSidebar"

onclick="sidebar_open()">

<i class="fa-solid fa-bars"></i>

</button>

<button class="navbar-brand" id="closeSidebar"

onclick="sidebar_close()">

<i class="fa-solid fa-bars"></i>

</button>

<a class="navbar-brand" href="#" style="font-size: 23px">Forms</a>

</div>

<div>

<ul class="nav navbar-nav navbar-right">

<li><a href="../Logout.jsp"><span class="glyphicon glyphicon-log-in"></span> Logout</a></li>

</ul>

</div>

</div>

</nav>

<!------------------- Nav Bar end ----------------->

<!------------------- Side Bar start----------------->

<div class="main-content-container">

<aside id="sidebar_container">

<div class="sidebar-header"></div>

<ul class="list-unstyled mt-0" role="menu" style="font-size: 14px;">

<a href="AdminHome.jsp" ><li style="font-weight: 600;">Create Form</li></a>

<a href="AddUser.jsp" ><li style="font-weight: 600;">Add Users</li></a>

<a href="Result.jsp" ><li style="font-weight: 600;">Results</li></a>

<a href="ViewNomination.jsp" ><li style="font-weight: 600;">Nominations</li></a>

<a href="Report.jsp" ><li style="font-weight: 600;">Report</li></a>

</ul>

</aside>

<!----------------- Side Bar end----------------->

<section>

<!------------------ Create Form Start ------------------->

<%

int formId = 0;

try {

Connection con = ConnectionProvider.getCon(); //Establish the connection

Statement st = con.createStatement();

ResultSet rs = st.executeQuery("select * from Form order by form_id asc");

while (rs.next()) {

String formValue = rs.getString("form_id");

formId = Integer.parseInt(formValue); // Get the last FormID

}

formId = formId + 1;

}

catch (Exception e) {

out.print(e);

}

%>

<h3>Create Form</h3>

<form action="createFormAction.jsp" method="post" class="container fieldFormContainer">

<div class="container CreateFormOuterContainer">

<div class="CreateFormContainer">

<div class="CreateFormInnerContainer">

<input type="hidden" name="formId" value="<%= formId %>">

<div>

<div class="input-group" style="margin-bottom: 10px">

<label for="title" class="form-label border border-primary" style="width: 130px;">Form Title<span> *</span></label>

<input type="text" name="title" class="form-control" style="border: 1px solid #43A6C6" placeholder="Title" required>

</div>

<div class="input-group" style="margin-bottom: 10px">

<label for="description" class="formlabel" style="width: 143px;">Description<span> *</span></label>

<textarea name="description" style="border: 1px solid #43A6C6" placeholder="Description..." class="form-control" required></textarea>

</div>

</div>

<div>

<div class="input-group" style="margin-bottom: 10px">

<label for="Active" class="col-form-label" style="width: 175px;">Active<span> *</span></label>

<select name="active" class="form-control" style="margin-bottom: 10px; border: 1px solid #43A6C6" required>

<option value="">Select Yes or No</option>

<option value="1">Yes</option>

<option value="0">No</option>

</select>

</div>

<div class="input-group" style="margin-bottom: 10px">

<label for="End_date" class="col-form-label" style="width: 180px;">End date<span> *</span></label>

<input type="date" id="Date" name="End_date" class="form-control" style="border: 1px solid #43A6C6" required>

</div>

</div>

</div>

</div>

</div>

<div class="container" id="TotalFields">

<label for="totalFields" class="col-form-label" style="padding-top:8px;">Fields</label>

<div class="Fields">

<div class="quantity">

<input type="button" class="increase" value="+" onclick="AddFields()">

<input type="number" name="totalFields" value="1" min="1" readonly>

<input type="button" class="decrease" value="-" onclick="RemoveFields()">

</div>

</div>

</div>

<!------------------ Create Form End ------------------->

<%

int fieldId = 0;

int i = 1;

try {

Connection con = ConnectionProvider.getCon();

Statement st3 = con.createStatement();

ResultSet fieldRs = st3.executeQuery("select * from Field order by field_id asc");

while (fieldRs.next()) {

String fieldidValue = fieldRs.getString("field_id");

fieldId = Integer.parseInt(fieldidValue); //Get the last FieldID

}

fieldId = fieldId + 1;

}

catch (Exception e) {

out.print(e);

}

%>

<!------------------- Create Field Elements Start------------------>

<div class="FieldsOuterContainer">

<div class="FieldsInnerContainer">

<div class="container FieldsContainer" id="FieldsContainer" style="margin-bottom: 30px;">

<div class="InnerFieldsContainer">

<div class="field-container">

<input type="text" name="id" id="hiddenFieldId" value="<%= fieldId %>">

<input type="text" name="fieldText" placeholder="Enter Field Label" class="fieldText" style="width: 200px; border: 1px solid #43A6C6" required>

<select class="form-select form-control" name="fieldType" id="fieldList<%= i %>" style="width: 250px; border: 1px solid #43A6C6"

onchange="selectedField('fieldList<%= i %>', 'inputFields<%= i %>', '<%= fieldId %>')" required>

<option value="">Select field type</option>

<option value="text">Text</option>

<option value="number">Number</option>

<option value="date">Date</option>

<option value="dropdown">Drop down</option>

<option value="radio">Radio button</option>

<option value="check">Checkbox</option>

<option value="dependentRadio">Dependent Radio</option>

<option value="dependentDrop">Dependent Dropdown</option>

</select>

<div class="priorityDiv">

<label for="priority">Priority</label>

<input type="number" name="priority" class="form-control" id="priority" value="1" min="1">

</div>

<input type=text name="IsDependent" value="no">

<div id="inputFields<%= i %>" class="inputs"></div>

</div>

</div>

</div>

<div class="form-group">

<div class="text-center">

<input type="submit" name="submit" value="Submit" style="background-color: black; color: white;" class="btn sbt-button">

</div>

</div>

</div>

</div>

<script type="text/javascript">

const items = document.querySelectorAll('.Fields');

items.forEach(item => {

const quantityInput = item.querySelector('input[type="number"]');

const increaseButton = item.querySelector('.increase');

const decreaseButton = item.querySelector('.decrease');

increaseButton.addEventListener('click', () => {

if (quantityInput.value >= 1) {

decreaseButton.disabled = false;

}

quantityInput.value++;

});

decreaseButton.addEventListener('click', () => {

if (quantityInput.value > 1) {

quantityInput.value--;

}

if (quantityInput.value > 1) {

decreaseButton.disabled = false;

}

else{

decreaseButton.disabled = true;

}

});

});

var FieldsContainer = document.getElementById("FieldsContainer");

let fieldId = <%= fieldId %>;

let i = 1;

let value=0;

let priority = 1;

function AddFields(){

i++;

priority++;

fieldId = fieldId+2;

const InnerFieldsContainerDiv = document.createElement("div");

InnerFieldsContainerDiv.className = "InnerFieldsContainer";

InnerFieldsContainerDiv.id = "fieldContainerDiv"+i;

const fieldContainerDiv = document.createElement("div");

fieldContainerDiv.className = "field-container";

const textField = document.createElement("input");

textField.type = "text";

textField.name = "id";

textField.value = fieldId;

fieldContainerDiv.appendChild(textField);

const textField2 = document.createElement("input");

textField2.type = "text";

textField2.name = "fieldText";

textField2.placeholder="Enter Field Label";

textField2.className="fieldText";

textField2.style = "width: 200px;border:1px solid #43A6C6;";

fieldContainerDiv.appendChild(textField2);

const inputContainer = document.createElement("div");

inputContainer.innerHTML = '<select class="form-select form-control" name="fieldType" id="fieldList' +

i +

'" style="width: 250px;border:1px solid #43A6C6; " onchange="selectedField(\'fieldList' +

i +

'\', \'inputFields' +

i +

'\', \'' +

fieldId +

'\')" required> <option value="">Select field type</option> <option value="text">Text</option> <option value="number">Number</option> <option value="date">Date</option> <option value="dropdown">Drop down</option> <option value="radio">Radio button</option> <option value="check">Check box</option><option value="dependentRadio">Dependent Radio</option><option value="dependentDrop">Dependent Dropdown</option></select>';

fieldContainerDiv.appendChild(inputContainer);

const priorityDiv = document.createElement("div");

priorityDiv.className = "priorityDiv";

priorityDiv.innerHTML ='<label for="priority">Priority</label> <input type="number" name="priority" class="form-control" id="priority" value="'+ priority +'" min="1">';

fieldContainerDiv.appendChild(priorityDiv);

const dependentField = document.createElement("input");

dependentField.type = "text";

dependentField.name = "IsDependent";

dependentField.value = "no";

fieldContainerDiv.appendChild(dependentField);

const inputFields = document.createElement("div");

inputFields.id = "inputFields" + i;

inputFields.className = "inputs";

fieldContainerDiv.appendChild(inputFields);

InnerFieldsContainerDiv.appendChild(fieldContainerDiv);

document.getElementById("FieldsContainer").appendChild(InnerFieldsContainerDiv);

}

function RemoveFields(){

var fieldContainerDiv = document.getElementById('FieldsContainer');

fieldContainerDiv.removeChild(fieldContainerDiv.lastChild);

}

</script>

<%

int valueId =0;

try{

Connection con = ConnectionProvider.getCon();

Statement st3 = con.createStatement();

ResultSet fieldRs = st3.executeQuery("select * from Field_Value order by value_id asc");

while (fieldRs.next()) {

String fieldidValue = fieldRs.getString("value_id");

valueId = Integer.parseInt(fieldidValue); //Get the last FieldID

}

valueId = valueId + 1;

}

catch(Exception e){

out.print(e);

}

%>

<script type="text/javascript">

let containerId = 1;

function selectedField(fieldId, inputId, fid) {

var field = document.getElementById(fieldId);

var selectedValue = field.options[field.selectedIndex].value;

var field = document.getElementById(fieldId);

var inputFields = document.getElementById(inputId);

if (selectedValue === "text" || selectedValue === "number" || selectedValue === "date") {

inputFields.innerHTML="";

}

else if(selectedValue === "dependentRadio" || selectedValue === "dependentDrop" || selectedValue === "dependentCheck"){

inputFields.innerHTML="";

const dependentDiv = document.createElement("div");

dependentDiv.id="dependentDiv";

var inputs = document.querySelectorAll('input[name="valueId"]');

var arrayInputs = Array.from(inputs);

var length = arrayInputs.length;

if(length === 0){

lastValue = <%= valueId %>;

}

else{

arrayInputs.sort((a, b) =>{

return Number(b.value) - Number(a.value);

});

var lastValue = arrayInputs[0].value;

lastValue++;

console.log(lastValue);

}

dFid = parseInt(fid)+1;

inputFields.innerHTML='<div class="input-container" style="margin-top:5px;"><div style="display:flex;gap: 20px;flex-wrap:wrap;"><input type="text" class = "dependentId" name="fieldId" value="' + fid + '"><input type="text" value="0"><input type="text" class="dependentId" name="valueId" value="'+ lastValue +'"><input type="text" name="value" class="fieldText" id="dependentOption" placeholder="Enter a option" style="width:250px;border:1px solid #43A6C6;margin-bottom: 10px;" required><button type="button" class="add-button btn" onclick="DependentEnteredValues(this, \'' + fid + '\')"><i class="fa-solid fa-plus"></i></button></div></div>';

const hiddenField = document.createElement("input");

hiddenField.type = "text";

hiddenField.name = "ChildId";

hiddenField.id = "fieldId";

hiddenField.value = parseInt(fid)+1;

dependentDiv.appendChild(hiddenField);


const textField = document.createElement("input");

textField.type = "text";

textField.name = "id";



textField.id = "fieldId";

textField.value = parseInt(fid)+1;

dependentDiv.appendChild(textField);

const dependentFieldDiv = document.createElement("div");

dependentFieldDiv.id="dependentFieldContainer";


const textField2 = document.createElement("input");

textField2.type = "text";

textField2.name = "fieldText";

textField2.placeholder="Enter Dependent Label";

textField2.className="fieldText";

textField2.style = "width: 200px;border:1px solid #43A6C6";

dependentFieldDiv.appendChild(textField2);

const dependentSelectDiv = document.createElement("div");

dependentSelectDiv.innerHTML = '<select class="form-select form-control" name="fieldType" id="fieldList' +

fid +

'" style="width: 250px;border:1px solid #43A6C6" onchange="DependentSelectedField(\'fieldList' +

fid +

'\', \'DependentinputFields' +

fid +

'\', \'' +

fid +

'\',\''+ inputFields +'\')" required> <option value="">Select dependent field type</option><option value="text">Text</option><option value="dropdown">Drop down</option><option value="check">Check box</option></select>';

dependentFieldDiv.appendChild(dependentSelectDiv);

const priorityField = document.createElement("input");

priorityField.type = "text";

priorityField.name = "priority";

priorityField.value = "0";

dependentFieldDiv.appendChild(priorityField);

dependentDiv.appendChild(dependentFieldDiv);

const dependentField = document.createElement("input");

dependentField.type = "text";

dependentField.name = "IsDependent";

dependentField.value = "yes";

dependentDiv.appendChild(dependentField);

const DependentInputFields = document.createElement("div");

DependentInputFields.id = "DependentinputFields" + fid;

DependentInputFields.className = "DependentinputFields";

dependentDiv.appendChild(DependentInputFields);

inputFields.appendChild(dependentDiv);

}

else{

var inputs = document.querySelectorAll('input[name="valueId"]');

var arrayInputs = Array.from(inputs);

var length = arrayInputs.length;

if(length === 0){

lastValue = <%= valueId %>;

}

else{

arrayInputs.sort((a, b) =>{

return Number(b.value) - Number(a.value);

});

var lastValue = arrayInputs[0].value;

lastValue++;

console.log(lastValue);

}

inputFields.innerHTML='<div class="input-container"><div style="display:flex;gap: 20px;flex-wrap:wrap;"><input type="text" name="fieldId" value="' + fid + '"><input type="text" name="dependentId" value="0"><input type="text" name="valueId" value="'+lastValue+'"><input type="text" name="value" class="fieldText" placeholder="Enter a option" style="width:250px;border:1px solid #43A6C6;margin-bottom: 10px;" required><button type="button" class="btn" style="margin-bottom: 5px;" onclick="EnteredValues(this, \'' + fid + '\')"><i class="fa-solid fa-plus"></i></button></div></div>';

}

}

function EnteredValues(button, fid) {

var inputContainer = button.parentNode;

var inputFields = inputContainer.parentNode;

value++;

if (inputFields.children.length <= 20) {

var inputs = document.querySelectorAll('input[name="valueId"]');

var arrayInputs = Array.from(inputs);

arrayInputs.sort((a, b) =>{

return Number(b.value) - Number(a.value);

});

var lastValue = arrayInputs[0].value;

lastValue++;

console.log(lastValue);

var txtNewInputBox = document.createElement('div');

txtNewInputBox.innerHTML = '<div class="input-container" id="input-container'+ lastValue +'" ><div id="RemoveValue'+ value +'" style="display:flex;gap: 20px;flex-wrap:wrap;"><input type="text" name="fieldId" value="' + fid + '"><input type="text" name="dependentId" value="0"><input type="text" name="valueId" value="'+lastValue+'"><input type="text" name="value" class="fieldText" placeholder="Enter a option" style="width:250px;border:1px solid #43A6C6;margin-bottom: 10px;"required><div><button type="button" class="FieldsRemove btn" onclick="RemoveValue(\'RemoveValue'+ value +'\')">x</button></div></div></div>';

inputFields.insertBefore(txtNewInputBox, inputFields.firstChild);

}

}

function DependentEnteredValues(button, fid) {

var inputContainer = button.parentNode;

var inputFields = inputContainer.parentNode;

value++;

if (inputFields.children.length <= 20) {

var inputs = document.querySelectorAll('input[name="valueId"]');

var arrayInputs = Array.from(inputs);

arrayInputs.sort((a, b) =>{

return Number(b.value) - Number(a.value);

});

var lastValue = arrayInputs[0].value;

lastValue++;

console.log(lastValue);

var txtNewInputBox = document.createElement('div');

txtNewInputBox.innerHTML = '<div class="input-container" id="input-container'+ lastValue +'" ><div id="RemoveValue'+ value +'" style="display:flex;gap: 20px;flex-wrap:wrap;"><input type="text" name="fieldId"  value="' + fid + '"><input type="text" name="dependentId" value="0"><input type="text" class="dependentId" name="valueId" value="'+lastValue+'"><input type="text" name="value" class="fieldText" id="dependentOption" placeholder="Enter a option" style="width:250px;border:1px solid #43A6C6;margin-bottom: 10px;"required><div><button type="button" class="FieldsRemove btn" onclick="RemoveValue(\'RemoveValue'+ value +'\')">x</button></div></div></div>';


inputFields.insertBefore(txtNewInputBox, inputFields.firstChild);

}

}

function DependentSelectedField(fieldId, inputId, fid, inputField) {
	  var field = document.getElementById(fieldId);
	  var selectedValue = field.options[field.selectedIndex].value;
	  
	  var DependentinputFields = document.getElementById(inputId);
	  DependentinputFields.innerHTML = ""; // Clear previous fields
	  
	  var option = document.querySelectorAll('[id=dependentOption]');
	  var dependentId = document.querySelectorAll('[class=dependentId]');

	  option.forEach(function(item, index) {
	    var optionValue = item.value;
	    var dependentIdValue = dependentId[index].innerText; // Retrieve dependent ID value
	    
	    // Create a text field for the option
	    var textFieldOption = document.createElement('input');
	    textFieldOption.type = 'text';
	    textFieldOption.value = optionValue;
	    DependentinputFields.appendChild(textFieldOption);
	    
	    // Create a text field for the dependent ID
	    var textFieldId = document.createElement('input');
	    textFieldId.type = 'text';
	    textFieldId.value = dependentIdValue;
	    DependentinputFields.appendChild(textFieldId);
	  });
	}


function RemoveValue(RemoveValueDiv){

var RemoveValueDiv = document.getElementById(RemoveValueDiv);

RemoveValueDiv.remove();

}

const today = new Date();

const date = today.toISOString().substring(0, 10);

console.log(date);

document.getElementById("Date").min = date;

</script>

</form>

</section>

</div>

</div>

</body>
</html>
